import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
df=pd.read_csv('Titanic-Dataset.csv')
df.head()
df.info()
df = df.drop(columns=['Name', 'Ticket', 'Cabin'], errors='ignore')
df['Sex'] = df['Sex'].map({'male': 0, 'female': 1})
df['Embarked'] = df['Embarked'].map({'S': 0, 'C': 1, 'Q': 2})
df.describe()
df.drop_duplicates()
sns.barplot(x='Survived', y='Age', hue="Survived", data=df)
plt.title('Survival Count By Age')
plt.show()
sns.barplot(x='Survived', y='Sex', data=df)
plt.title('Survival Count By Gender')
plt.show()
sns.lineplot(x='Pclass', y='Survived',data=df)
plt.title('count by pclass')
plt.show()
sns.histplot(x='Age',hue="Survived",data=df)
plt.title("Age Distribution by Survival")
plt.show()
sns.boxplot(x ='Age',data=df)
plt.show()
sns.boxplot(x ='Pclass',data=df)
plt.show()
#columns except survival
X = df.drop('Survived', axis=1)
y = df['Survived']
X_train,X_test,y_train,y_test = train_test_split(X,y)
model = RandomForestClassifier()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
print("Accuracy:", accuracy_score(y_test, y_pred))
print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred))
print("Classification Report:\n", classification_report(y_test, y_pred))
